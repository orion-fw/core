var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __esm=(fn,res)=>function __init(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var Vector3;var init_Vector3=__esm({"node_modules/@nativewrappers/client/lib/utils/Vector3.js"(){Vector3=class _Vector3{constructor(x,y,z){this.x=x;this.y=y;this.z=z}static create(v1){if(typeof v1==="number")return new _Vector3(v1,v1,v1);return new _Vector3(v1.x,v1.y,v1.z)}static fromArray(primitive){return new _Vector3(primitive[0],primitive[1],primitive[2])}static fromArrays(primitives){return primitives.map(prim=>new _Vector3(prim[0],prim[1],prim[2]))}static clone(v1){return _Vector3.create(v1)}static add(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x+v2,v1.y+v2,v1.z+v2);return new _Vector3(v1.x+v2.x,v1.y+v2.y,v1.z+v2.z)}static addX(vec,x){return new _Vector3(vec.x+x,vec.y,vec.z)}static addY(vec,y){return new _Vector3(vec.x,vec.y+y,vec.z)}static addZ(vec,z){return new _Vector3(vec.x,vec.y,vec.z+z)}static subtract(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x-v2,v1.y-v2,v1.z-v2);return new _Vector3(v1.x-v2.x,v1.y-v2.y,v1.z-v2.z)}static multiply(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x*v2,v1.y*v2,v1.z*v2);return new _Vector3(v1.x*v2.x,v1.y*v2.y,v1.z*v2.z)}static divide(v1,v2){if(typeof v2==="number")return new _Vector3(v1.x/v2,v1.y/v2,v1.z/v2);return new _Vector3(v1.x/v2.x,v1.y/v2.y,v1.z/v2.z)}static dotProduct(v1,v2){return v1.x*v2.x+v1.y*v2.y+v1.z*v2.z}static crossProduct(v1,v2){const x=v1.y*v2.z-v1.z*v2.y;const y=v1.z*v2.x-v1.x*v2.z;const z=v1.x*v2.y-v1.y*v2.x;return new _Vector3(x,y,z)}static normalize(v){return _Vector3.divide(v,v.Length)}clone(){return new _Vector3(this.x,this.y,this.z)}distanceSquared(v){const w=this.subtract(v);return _Vector3.dotProduct(w,w)}distance(v){return Math.sqrt(this.distanceSquared(v))}get normalize(){return _Vector3.normalize(this)}crossProduct(v){return _Vector3.crossProduct(this,v)}dotProduct(v){return _Vector3.dotProduct(this,v)}add(v){return _Vector3.add(this,v)}addX(x){return _Vector3.addX(this,x)}addY(y){return _Vector3.addY(this,y)}addZ(z){return _Vector3.addZ(this,z)}subtract(v){return _Vector3.subtract(this,v)}multiply(v){return _Vector3.multiply(this,v)}divide(v){return _Vector3.divide(this,v)}toArray(){return[this.x,this.y,this.z]}replace(v){this.x=v.x;this.y=v.y;this.z=v.z}get Length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}};Vector3.Zero=new Vector3(0,0,0)}});var Vector4;var init_Vector4=__esm({"node_modules/@nativewrappers/client/lib/utils/Vector4.js"(){init_Vector3();Vector4=class _Vector4{constructor(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w}static create(v1){if(typeof v1==="number")return new _Vector4(v1,v1,v1,v1);return new _Vector4(v1.x,v1.y,v1.z,v1.w)}static fromArray(primitive){return new _Vector4(primitive[0],primitive[1],primitive[2],primitive[3])}static fromArrays(primitives){return primitives.map(prim=>new _Vector4(prim[0],prim[1],prim[2],prim[3]))}static clone(v1){return _Vector4.create(v1)}static add(v1,v2){if(typeof v2==="number")return new _Vector4(v1.x+v2,v1.y+v2,v1.z+v2,v1.w+v2);return new _Vector4(v1.x+v2.x,v1.y+v2.y,v1.z+v2.z,v1.w+v2.w)}static subtract(v1,v2){if(typeof v2==="number")return new _Vector4(v1.x-v2,v1.y-v2,v1.z-v2,v1.w-v2);return new _Vector4(v1.x-v2.x,v1.y-v2.y,v1.z-v2.z,v1.w-v2.w)}static multiply(v1,v2){if(typeof v2==="number")return new _Vector4(v1.x*v2,v1.y*v2,v1.z*v2,v1.w*v2);return new _Vector4(v1.x*v2.x,v1.y*v2.y,v1.z*v2.z,v1.w*v2.w)}static divide(v1,v2){if(typeof v2==="number")return new _Vector4(v1.x/v2,v1.y/v2,v1.z/v2,v1.w/v2);return new _Vector4(v1.x/v2.x,v1.y/v2.y,v1.z/v2.z,v1.w/v2.w)}static dotProduct(v1,v2){return v1.x*v2.x+v1.y*v2.y+v1.z*v2.z+v1.w*v2.w}static crossProduct(v1,v2){const x=v1.y*v2.z-v1.z*v2.y;const y=v1.z*v2.x-v1.x*v2.z;const z=v1.x*v2.y-v1.y*v2.x;return new _Vector4(x,y,z,v1.w)}static normalize(v){return _Vector4.divide(v,v.Length)}clone(){return new _Vector4(this.x,this.y,this.z,this.w)}distanceSquared(v){const w=this.subtract(v);return _Vector4.dotProduct(w,w)}distance(v){return Math.sqrt(this.distanceSquared(v))}get normalize(){return _Vector4.normalize(this)}crossProduct(v){return _Vector4.crossProduct(this,v)}dotProduct(v){return _Vector4.dotProduct(this,v)}add(v){return _Vector4.add(this,v)}subtract(v){return _Vector4.subtract(this,v)}multiply(v){return _Vector4.multiply(this,v)}divide(v){return _Vector4.divide(this,v)}toArray(){return[this.x,this.y,this.z,this.w]}toVec3(){return new Vector3(this.x,this.y,this.z)}replace(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w}get Length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}}}});var Crypto;var init_Crypto=__esm({"node_modules/@nativewrappers/client/lib/utils/Crypto.js"(){Crypto=class{static uuidv4(){let uuid="";for(let ii=0;ii<32;ii+=1){switch(ii){case 8:case 20:uuid+="-";uuid+=(Math.random()*16|0).toString(16);break;case 12:uuid+="-";uuid+="4";break;case 16:uuid+="-";uuid+=(Math.random()*4|8).toString(16);break;default:uuid+=(Math.random()*16|0).toString(16)}}return uuid}}}});var init_Animations=__esm({"node_modules/@nativewrappers/client/lib/utils/Animations.js"(){}});var init_utils=__esm({"node_modules/@nativewrappers/client/lib/utils/index.js"(){init_Vector4();init_Crypto();init_Animations()}});var CargobobHook,LicensePlateStyle,LicensePlateType,VehicleClass,VehicleColor,VehicleLandingGearState,VehicleLockStatus,VehicleNeonLight,VehicleRoofState,VehicleSeat,VehicleWindowTint,VehicleWindowIndex,VehicleModType,VehicleToggleModType,VehiclePaintType,VehicleDoorIndex,VehicleWheelType,VehicleWheelIndex;var init_Vehicle=__esm({"node_modules/@nativewrappers/client/lib/enums/Vehicle.js"(){(function(CargobobHook2){CargobobHook2[CargobobHook2["Hook"]=0]="Hook";CargobobHook2[CargobobHook2["Magnet"]=1]="Magnet"})(CargobobHook||(CargobobHook={}));(function(LicensePlateStyle2){LicensePlateStyle2[LicensePlateStyle2["BlueOnWhite1"]=3]="BlueOnWhite1";LicensePlateStyle2[LicensePlateStyle2["BlueOnWhite2"]=0]="BlueOnWhite2";LicensePlateStyle2[LicensePlateStyle2["BlueOnWhite3"]=4]="BlueOnWhite3";LicensePlateStyle2[LicensePlateStyle2["YellowOnBlack"]=1]="YellowOnBlack";LicensePlateStyle2[LicensePlateStyle2["YellowOnBlue"]=2]="YellowOnBlue";LicensePlateStyle2[LicensePlateStyle2["NorthYankton"]=5]="NorthYankton"})(LicensePlateStyle||(LicensePlateStyle={}));(function(LicensePlateType2){LicensePlateType2[LicensePlateType2["FrontAndRearPlates"]=0]="FrontAndRearPlates";LicensePlateType2[LicensePlateType2["FrontPlate"]=1]="FrontPlate";LicensePlateType2[LicensePlateType2["RearPlate"]=2]="RearPlate";LicensePlateType2[LicensePlateType2["None"]=3]="None"})(LicensePlateType||(LicensePlateType={}));(function(VehicleClass2){VehicleClass2[VehicleClass2["Compacts"]=0]="Compacts";VehicleClass2[VehicleClass2["Sedans"]=1]="Sedans";VehicleClass2[VehicleClass2["SUVs"]=2]="SUVs";VehicleClass2[VehicleClass2["Coupes"]=3]="Coupes";VehicleClass2[VehicleClass2["Muscle"]=4]="Muscle";VehicleClass2[VehicleClass2["SportsClassics"]=5]="SportsClassics";VehicleClass2[VehicleClass2["Sports"]=6]="Sports";VehicleClass2[VehicleClass2["Super"]=7]="Super";VehicleClass2[VehicleClass2["Motorcycles"]=8]="Motorcycles";VehicleClass2[VehicleClass2["OffRoad"]=9]="OffRoad";VehicleClass2[VehicleClass2["Industrial"]=10]="Industrial";VehicleClass2[VehicleClass2["Utility"]=11]="Utility";VehicleClass2[VehicleClass2["Vans"]=12]="Vans";VehicleClass2[VehicleClass2["Cycles"]=13]="Cycles";VehicleClass2[VehicleClass2["Boats"]=14]="Boats";VehicleClass2[VehicleClass2["Helicopters"]=15]="Helicopters";VehicleClass2[VehicleClass2["Planes"]=16]="Planes";VehicleClass2[VehicleClass2["Service"]=17]="Service";VehicleClass2[VehicleClass2["Emergency"]=18]="Emergency";VehicleClass2[VehicleClass2["Military"]=19]="Military";VehicleClass2[VehicleClass2["Commercial"]=20]="Commercial";VehicleClass2[VehicleClass2["Trains"]=21]="Trains"})(VehicleClass||(VehicleClass={}));(function(VehicleColor2){VehicleColor2[VehicleColor2["MetallicBlack"]=0]="MetallicBlack";VehicleColor2[VehicleColor2["MetallicGraphiteBlack"]=1]="MetallicGraphiteBlack";VehicleColor2[VehicleColor2["MetallicBlackSteel"]=2]="MetallicBlackSteel";VehicleColor2[VehicleColor2["MetallicDarkSilver"]=3]="MetallicDarkSilver";VehicleColor2[VehicleColor2["MetallicSilver"]=4]="MetallicSilver";VehicleColor2[VehicleColor2["MetallicBlueSilver"]=5]="MetallicBlueSilver";VehicleColor2[VehicleColor2["MetallicSteelGray"]=6]="MetallicSteelGray";VehicleColor2[VehicleColor2["MetallicShadowSilver"]=7]="MetallicShadowSilver";VehicleColor2[VehicleColor2["MetallicStoneSilver"]=8]="MetallicStoneSilver";VehicleColor2[VehicleColor2["MetallicMidnightSilver"]=9]="MetallicMidnightSilver";VehicleColor2[VehicleColor2["MetallicGunMetal"]=10]="MetallicGunMetal";VehicleColor2[VehicleColor2["MetallicAnthraciteGray"]=11]="MetallicAnthraciteGray";VehicleColor2[VehicleColor2["MatteBlack"]=12]="MatteBlack";VehicleColor2[VehicleColor2["MatteGray"]=13]="MatteGray";VehicleColor2[VehicleColor2["MatteLightGray"]=14]="MatteLightGray";VehicleColor2[VehicleColor2["UtilBlack"]=15]="UtilBlack";VehicleColor2[VehicleColor2["UtilBlackPoly"]=16]="UtilBlackPoly";VehicleColor2[VehicleColor2["UtilDarksilver"]=17]="UtilDarksilver";VehicleColor2[VehicleColor2["UtilSilver"]=18]="UtilSilver";VehicleColor2[VehicleColor2["UtilGunMetal"]=19]="UtilGunMetal";VehicleColor2[VehicleColor2["UtilShadowSilver"]=20]="UtilShadowSilver";VehicleColor2[VehicleColor2["WornBlack"]=21]="WornBlack";VehicleColor2[VehicleColor2["WornGraphite"]=22]="WornGraphite";VehicleColor2[VehicleColor2["WornSilverGray"]=23]="WornSilverGray";VehicleColor2[VehicleColor2["WornSilver"]=24]="WornSilver";VehicleColor2[VehicleColor2["WornBlueSilver"]=25]="WornBlueSilver";VehicleColor2[VehicleColor2["WornShadowSilver"]=26]="WornShadowSilver";VehicleColor2[VehicleColor2["MetallicRed"]=27]="MetallicRed";VehicleColor2[VehicleColor2["MetallicTorinoRed"]=28]="MetallicTorinoRed";VehicleColor2[VehicleColor2["MetallicFormulaRed"]=29]="MetallicFormulaRed";VehicleColor2[VehicleColor2["MetallicBlazeRed"]=30]="MetallicBlazeRed";VehicleColor2[VehicleColor2["MetallicGracefulRed"]=31]="MetallicGracefulRed";VehicleColor2[VehicleColor2["MetallicGarnetRed"]=32]="MetallicGarnetRed";VehicleColor2[VehicleColor2["MetallicDesertRed"]=33]="MetallicDesertRed";VehicleColor2[VehicleColor2["MetallicCabernetRed"]=34]="MetallicCabernetRed";VehicleColor2[VehicleColor2["MetallicCandyRed"]=35]="MetallicCandyRed";VehicleColor2[VehicleColor2["MetallicSunriseOrange"]=36]="MetallicSunriseOrange";VehicleColor2[VehicleColor2["MetallicClassicGold"]=37]="MetallicClassicGold";VehicleColor2[VehicleColor2["MetallicOrange"]=38]="MetallicOrange";VehicleColor2[VehicleColor2["MatteRed"]=39]="MatteRed";VehicleColor2[VehicleColor2["MatteDarkRed"]=40]="MatteDarkRed";VehicleColor2[VehicleColor2["MatteOrange"]=41]="MatteOrange";VehicleColor2[VehicleColor2["MatteYellow"]=42]="MatteYellow";VehicleColor2[VehicleColor2["UtilRed"]=43]="UtilRed";VehicleColor2[VehicleColor2["UtilBrightRed"]=44]="UtilBrightRed";VehicleColor2[VehicleColor2["UtilGarnetRed"]=45]="UtilGarnetRed";VehicleColor2[VehicleColor2["WornRed"]=46]="WornRed";VehicleColor2[VehicleColor2["WornGoldenRed"]=47]="WornGoldenRed";VehicleColor2[VehicleColor2["WornDarkRed"]=48]="WornDarkRed";VehicleColor2[VehicleColor2["MetallicDarkGreen"]=49]="MetallicDarkGreen";VehicleColor2[VehicleColor2["MetallicRacingGreen"]=50]="MetallicRacingGreen";VehicleColor2[VehicleColor2["MetallicSeaGreen"]=51]="MetallicSeaGreen";VehicleColor2[VehicleColor2["MetallicOliveGreen"]=52]="MetallicOliveGreen";VehicleColor2[VehicleColor2["MetallicGreen"]=53]="MetallicGreen";VehicleColor2[VehicleColor2["MetallicGasolineBlueGreen"]=54]="MetallicGasolineBlueGreen";VehicleColor2[VehicleColor2["MatteLimeGreen"]=55]="MatteLimeGreen";VehicleColor2[VehicleColor2["UtilDarkGreen"]=56]="UtilDarkGreen";VehicleColor2[VehicleColor2["UtilGreen"]=57]="UtilGreen";VehicleColor2[VehicleColor2["WornDarkGreen"]=58]="WornDarkGreen";VehicleColor2[VehicleColor2["WornGreen"]=59]="WornGreen";VehicleColor2[VehicleColor2["WornSeaWash"]=60]="WornSeaWash";VehicleColor2[VehicleColor2["MetallicMidnightBlue"]=61]="MetallicMidnightBlue";VehicleColor2[VehicleColor2["MetallicDarkBlue"]=62]="MetallicDarkBlue";VehicleColor2[VehicleColor2["MetallicSaxonyBlue"]=63]="MetallicSaxonyBlue";VehicleColor2[VehicleColor2["MetallicBlue"]=64]="MetallicBlue";VehicleColor2[VehicleColor2["MetallicMarinerBlue"]=65]="MetallicMarinerBlue";VehicleColor2[VehicleColor2["MetallicHarborBlue"]=66]="MetallicHarborBlue";VehicleColor2[VehicleColor2["MetallicDiamondBlue"]=67]="MetallicDiamondBlue";VehicleColor2[VehicleColor2["MetallicSurfBlue"]=68]="MetallicSurfBlue";VehicleColor2[VehicleColor2["MetallicNauticalBlue"]=69]="MetallicNauticalBlue";VehicleColor2[VehicleColor2["MetallicBrightBlue"]=70]="MetallicBrightBlue";VehicleColor2[VehicleColor2["MetallicPurpleBlue"]=71]="MetallicPurpleBlue";VehicleColor2[VehicleColor2["MetallicSpinnakerBlue"]=72]="MetallicSpinnakerBlue";VehicleColor2[VehicleColor2["MetallicUltraBlue"]=73]="MetallicUltraBlue";VehicleColor2[VehicleColor2["UtilDarkBlue"]=75]="UtilDarkBlue";VehicleColor2[VehicleColor2["UtilMidnightBlue"]=76]="UtilMidnightBlue";VehicleColor2[VehicleColor2["UtilBlue"]=77]="UtilBlue";VehicleColor2[VehicleColor2["UtilSeaFoamBlue"]=78]="UtilSeaFoamBlue";VehicleColor2[VehicleColor2["UtilLightningBlue"]=79]="UtilLightningBlue";VehicleColor2[VehicleColor2["UtilMauiBluePoly"]=80]="UtilMauiBluePoly";VehicleColor2[VehicleColor2["UtilBrightBlue"]=81]="UtilBrightBlue";VehicleColor2[VehicleColor2["MatteDarkBlue"]=82]="MatteDarkBlue";VehicleColor2[VehicleColor2["MatteBlue"]=83]="MatteBlue";VehicleColor2[VehicleColor2["MatteMidnightBlue"]=84]="MatteMidnightBlue";VehicleColor2[VehicleColor2["WornDarkBlue"]=85]="WornDarkBlue";VehicleColor2[VehicleColor2["WornBlue"]=86]="WornBlue";VehicleColor2[VehicleColor2["WornLightBlue"]=87]="WornLightBlue";VehicleColor2[VehicleColor2["MetallicTaxiYellow"]=88]="MetallicTaxiYellow";VehicleColor2[VehicleColor2["MetallicRaceYellow"]=89]="MetallicRaceYellow";VehicleColor2[VehicleColor2["MetallicBronze"]=90]="MetallicBronze";VehicleColor2[VehicleColor2["MetallicYellowBird"]=91]="MetallicYellowBird";VehicleColor2[VehicleColor2["MetallicLime"]=92]="MetallicLime";VehicleColor2[VehicleColor2["MetallicChampagne"]=93]="MetallicChampagne";VehicleColor2[VehicleColor2["MetallicPuebloBeige"]=94]="MetallicPuebloBeige";VehicleColor2[VehicleColor2["MetallicDarkIvory"]=95]="MetallicDarkIvory";VehicleColor2[VehicleColor2["MetallicChocoBrown"]=96]="MetallicChocoBrown";VehicleColor2[VehicleColor2["MetallicGoldenBrown"]=97]="MetallicGoldenBrown";VehicleColor2[VehicleColor2["MetallicLightBrown"]=98]="MetallicLightBrown";VehicleColor2[VehicleColor2["MetallicStrawBeige"]=99]="MetallicStrawBeige";VehicleColor2[VehicleColor2["MetallicMossBrown"]=100]="MetallicMossBrown";VehicleColor2[VehicleColor2["MetallicBistonBrown"]=101]="MetallicBistonBrown";VehicleColor2[VehicleColor2["MetallicBeechwood"]=102]="MetallicBeechwood";VehicleColor2[VehicleColor2["MetallicDarkBeechwood"]=103]="MetallicDarkBeechwood";VehicleColor2[VehicleColor2["MetallicChocoOrange"]=104]="MetallicChocoOrange";VehicleColor2[VehicleColor2["MetallicBeachSand"]=105]="MetallicBeachSand";VehicleColor2[VehicleColor2["MetallicSunBleechedSand"]=106]="MetallicSunBleechedSand";VehicleColor2[VehicleColor2["MetallicCream"]=107]="MetallicCream";VehicleColor2[VehicleColor2["UtilBrown"]=108]="UtilBrown";VehicleColor2[VehicleColor2["UtilMediumBrown"]=109]="UtilMediumBrown";VehicleColor2[VehicleColor2["UtilLightBrown"]=110]="UtilLightBrown";VehicleColor2[VehicleColor2["MetallicWhite"]=111]="MetallicWhite";VehicleColor2[VehicleColor2["MetallicFrostWhite"]=112]="MetallicFrostWhite";VehicleColor2[VehicleColor2["WornHoneyBeige"]=113]="WornHoneyBeige";VehicleColor2[VehicleColor2["WornBrown"]=114]="WornBrown";VehicleColor2[VehicleColor2["WornDarkBrown"]=115]="WornDarkBrown";VehicleColor2[VehicleColor2["WornStrawBeige"]=116]="WornStrawBeige";VehicleColor2[VehicleColor2["BrushedSteel"]=117]="BrushedSteel";VehicleColor2[VehicleColor2["BrushedBlackSteel"]=118]="BrushedBlackSteel";VehicleColor2[VehicleColor2["BrushedAluminium"]=119]="BrushedAluminium";VehicleColor2[VehicleColor2["Chrome"]=120]="Chrome";VehicleColor2[VehicleColor2["WornOffWhite"]=121]="WornOffWhite";VehicleColor2[VehicleColor2["UtilOffWhite"]=122]="UtilOffWhite";VehicleColor2[VehicleColor2["WornOrange"]=123]="WornOrange";VehicleColor2[VehicleColor2["WornLightOrange"]=124]="WornLightOrange";VehicleColor2[VehicleColor2["MetallicSecuricorGreen"]=125]="MetallicSecuricorGreen";VehicleColor2[VehicleColor2["WornTaxiYellow"]=126]="WornTaxiYellow";VehicleColor2[VehicleColor2["PoliceCarBlue"]=127]="PoliceCarBlue";VehicleColor2[VehicleColor2["MatteGreen"]=128]="MatteGreen";VehicleColor2[VehicleColor2["MatteBrown"]=129]="MatteBrown";VehicleColor2[VehicleColor2["MatteWhite"]=131]="MatteWhite";VehicleColor2[VehicleColor2["WornWhite"]=132]="WornWhite";VehicleColor2[VehicleColor2["WornOliveArmyGreen"]=133]="WornOliveArmyGreen";VehicleColor2[VehicleColor2["PureWhite"]=134]="PureWhite";VehicleColor2[VehicleColor2["HotPink"]=135]="HotPink";VehicleColor2[VehicleColor2["Salmonpink"]=136]="Salmonpink";VehicleColor2[VehicleColor2["MetallicVermillionPink"]=137]="MetallicVermillionPink";VehicleColor2[VehicleColor2["Orange"]=138]="Orange";VehicleColor2[VehicleColor2["Green"]=139]="Green";VehicleColor2[VehicleColor2["Blue"]=140]="Blue";VehicleColor2[VehicleColor2["MettalicBlackBlue"]=141]="MettalicBlackBlue";VehicleColor2[VehicleColor2["MetallicBlackPurple"]=142]="MetallicBlackPurple";VehicleColor2[VehicleColor2["MetallicBlackRed"]=143]="MetallicBlackRed";VehicleColor2[VehicleColor2["HunterGreen"]=144]="HunterGreen";VehicleColor2[VehicleColor2["MetallicPurple"]=145]="MetallicPurple";VehicleColor2[VehicleColor2["MetaillicVDarkBlue"]=146]="MetaillicVDarkBlue";VehicleColor2[VehicleColor2["ModshopBlack1"]=147]="ModshopBlack1";VehicleColor2[VehicleColor2["MattePurple"]=148]="MattePurple";VehicleColor2[VehicleColor2["MatteDarkPurple"]=149]="MatteDarkPurple";VehicleColor2[VehicleColor2["MetallicLavaRed"]=150]="MetallicLavaRed";VehicleColor2[VehicleColor2["MatteForestGreen"]=151]="MatteForestGreen";VehicleColor2[VehicleColor2["MatteOliveDrab"]=152]="MatteOliveDrab";VehicleColor2[VehicleColor2["MatteDesertBrown"]=153]="MatteDesertBrown";VehicleColor2[VehicleColor2["MatteDesertTan"]=154]="MatteDesertTan";VehicleColor2[VehicleColor2["MatteFoliageGreen"]=155]="MatteFoliageGreen";VehicleColor2[VehicleColor2["DefaultAlloyColor"]=156]="DefaultAlloyColor";VehicleColor2[VehicleColor2["EpsilonBlue"]=157]="EpsilonBlue";VehicleColor2[VehicleColor2["PureGold"]=158]="PureGold";VehicleColor2[VehicleColor2["BrushedGold"]=159]="BrushedGold"})(VehicleColor||(VehicleColor={}));(function(VehicleLandingGearState2){VehicleLandingGearState2[VehicleLandingGearState2["Deployed"]=0]="Deployed";VehicleLandingGearState2[VehicleLandingGearState2["Closing"]=1]="Closing";VehicleLandingGearState2[VehicleLandingGearState2["Opening"]=2]="Opening";VehicleLandingGearState2[VehicleLandingGearState2["Retracted"]=3]="Retracted"})(VehicleLandingGearState||(VehicleLandingGearState={}));(function(VehicleLockStatus2){VehicleLockStatus2[VehicleLockStatus2["None"]=0]="None";VehicleLockStatus2[VehicleLockStatus2["Unlocked"]=1]="Unlocked";VehicleLockStatus2[VehicleLockStatus2["Locked"]=2]="Locked";VehicleLockStatus2[VehicleLockStatus2["LockedForPlayer"]=3]="LockedForPlayer";VehicleLockStatus2[VehicleLockStatus2["StickPlayerInside"]=4]="StickPlayerInside";VehicleLockStatus2[VehicleLockStatus2["CanBeBrokenInto"]=7]="CanBeBrokenInto";VehicleLockStatus2[VehicleLockStatus2["CanBeBrokenIntoPersist"]=8]="CanBeBrokenIntoPersist";VehicleLockStatus2[VehicleLockStatus2["CannotBeTriedToEnter"]=10]="CannotBeTriedToEnter"})(VehicleLockStatus||(VehicleLockStatus={}));(function(VehicleNeonLight2){VehicleNeonLight2[VehicleNeonLight2["Left"]=0]="Left";VehicleNeonLight2[VehicleNeonLight2["Right"]=1]="Right";VehicleNeonLight2[VehicleNeonLight2["Front"]=2]="Front";VehicleNeonLight2[VehicleNeonLight2["Back"]=3]="Back"})(VehicleNeonLight||(VehicleNeonLight={}));(function(VehicleRoofState2){VehicleRoofState2[VehicleRoofState2["Closed"]=0]="Closed";VehicleRoofState2[VehicleRoofState2["Opening"]=1]="Opening";VehicleRoofState2[VehicleRoofState2["Opened"]=2]="Opened";VehicleRoofState2[VehicleRoofState2["Closing"]=3]="Closing"})(VehicleRoofState||(VehicleRoofState={}));(function(VehicleSeat2){VehicleSeat2[VehicleSeat2["None"]=-3]="None";VehicleSeat2[VehicleSeat2["Any"]=-2]="Any";VehicleSeat2[VehicleSeat2["Driver"]=-1]="Driver";VehicleSeat2[VehicleSeat2["Passenger"]=0]="Passenger";VehicleSeat2[VehicleSeat2["LeftFront"]=-1]="LeftFront";VehicleSeat2[VehicleSeat2["RightFront"]=0]="RightFront";VehicleSeat2[VehicleSeat2["LeftRear"]=1]="LeftRear";VehicleSeat2[VehicleSeat2["RightRear"]=2]="RightRear";VehicleSeat2[VehicleSeat2["ExtraSeat1"]=3]="ExtraSeat1";VehicleSeat2[VehicleSeat2["ExtraSeat2"]=4]="ExtraSeat2";VehicleSeat2[VehicleSeat2["ExtraSeat3"]=5]="ExtraSeat3";VehicleSeat2[VehicleSeat2["ExtraSeat4"]=6]="ExtraSeat4";VehicleSeat2[VehicleSeat2["ExtraSeat5"]=7]="ExtraSeat5";VehicleSeat2[VehicleSeat2["ExtraSeat6"]=8]="ExtraSeat6";VehicleSeat2[VehicleSeat2["ExtraSeat7"]=9]="ExtraSeat7";VehicleSeat2[VehicleSeat2["ExtraSeat8"]=10]="ExtraSeat8";VehicleSeat2[VehicleSeat2["ExtraSeat9"]=11]="ExtraSeat9";VehicleSeat2[VehicleSeat2["ExtraSeat10"]=12]="ExtraSeat10";VehicleSeat2[VehicleSeat2["ExtraSeat11"]=13]="ExtraSeat11";VehicleSeat2[VehicleSeat2["ExtraSeat12"]=14]="ExtraSeat12"})(VehicleSeat||(VehicleSeat={}));(function(VehicleWindowTint2){VehicleWindowTint2[VehicleWindowTint2["None"]=0]="None";VehicleWindowTint2[VehicleWindowTint2["PureBlack"]=1]="PureBlack";VehicleWindowTint2[VehicleWindowTint2["DarkSmoke"]=2]="DarkSmoke";VehicleWindowTint2[VehicleWindowTint2["LightSmoke"]=3]="LightSmoke";VehicleWindowTint2[VehicleWindowTint2["Stock"]=4]="Stock";VehicleWindowTint2[VehicleWindowTint2["Limo"]=5]="Limo";VehicleWindowTint2[VehicleWindowTint2["Green"]=6]="Green"})(VehicleWindowTint||(VehicleWindowTint={}));(function(VehicleWindowIndex2){VehicleWindowIndex2[VehicleWindowIndex2["FrontRightWindow"]=1]="FrontRightWindow";VehicleWindowIndex2[VehicleWindowIndex2["FrontLeftWindow"]=0]="FrontLeftWindow";VehicleWindowIndex2[VehicleWindowIndex2["BackRightWindow"]=3]="BackRightWindow";VehicleWindowIndex2[VehicleWindowIndex2["BackLeftWindow"]=2]="BackLeftWindow";VehicleWindowIndex2[VehicleWindowIndex2["ExtraWindow1"]=4]="ExtraWindow1";VehicleWindowIndex2[VehicleWindowIndex2["ExtraWindow2"]=5]="ExtraWindow2";VehicleWindowIndex2[VehicleWindowIndex2["ExtraWindow3"]=6]="ExtraWindow3";VehicleWindowIndex2[VehicleWindowIndex2["ExtraWindow4"]=7]="ExtraWindow4"})(VehicleWindowIndex||(VehicleWindowIndex={}));(function(VehicleModType2){VehicleModType2[VehicleModType2["Spoilers"]=0]="Spoilers";VehicleModType2[VehicleModType2["FrontBumper"]=1]="FrontBumper";VehicleModType2[VehicleModType2["RearBumper"]=2]="RearBumper";VehicleModType2[VehicleModType2["SideSkirt"]=3]="SideSkirt";VehicleModType2[VehicleModType2["Exhaust"]=4]="Exhaust";VehicleModType2[VehicleModType2["Frame"]=5]="Frame";VehicleModType2[VehicleModType2["Grille"]=6]="Grille";VehicleModType2[VehicleModType2["Hood"]=7]="Hood";VehicleModType2[VehicleModType2["Fender"]=8]="Fender";VehicleModType2[VehicleModType2["RightFender"]=9]="RightFender";VehicleModType2[VehicleModType2["Roof"]=10]="Roof";VehicleModType2[VehicleModType2["Engine"]=11]="Engine";VehicleModType2[VehicleModType2["Brakes"]=12]="Brakes";VehicleModType2[VehicleModType2["Transmission"]=13]="Transmission";VehicleModType2[VehicleModType2["Horns"]=14]="Horns";VehicleModType2[VehicleModType2["Suspension"]=15]="Suspension";VehicleModType2[VehicleModType2["Armor"]=16]="Armor";VehicleModType2[VehicleModType2["FrontWheel"]=23]="FrontWheel";VehicleModType2[VehicleModType2["RearWheel"]=24]="RearWheel";VehicleModType2[VehicleModType2["PlateHolder"]=25]="PlateHolder";VehicleModType2[VehicleModType2["VanityPlates"]=26]="VanityPlates";VehicleModType2[VehicleModType2["TrimDesign"]=27]="TrimDesign";VehicleModType2[VehicleModType2["Ornaments"]=28]="Ornaments";VehicleModType2[VehicleModType2["Dashboard"]=29]="Dashboard";VehicleModType2[VehicleModType2["DialDesign"]=30]="DialDesign";VehicleModType2[VehicleModType2["DoorSpeakers"]=31]="DoorSpeakers";VehicleModType2[VehicleModType2["Seats"]=32]="Seats";VehicleModType2[VehicleModType2["SteeringWheels"]=33]="SteeringWheels";VehicleModType2[VehicleModType2["ColumnShifterLevers"]=34]="ColumnShifterLevers";VehicleModType2[VehicleModType2["Plaques"]=35]="Plaques";VehicleModType2[VehicleModType2["Speakers"]=36]="Speakers";VehicleModType2[VehicleModType2["Trunk"]=37]="Trunk";VehicleModType2[VehicleModType2["Hydraulics"]=38]="Hydraulics";VehicleModType2[VehicleModType2["EngineBlock"]=39]="EngineBlock";VehicleModType2[VehicleModType2["AirFilter"]=40]="AirFilter";VehicleModType2[VehicleModType2["Struts"]=41]="Struts";VehicleModType2[VehicleModType2["ArchCover"]=42]="ArchCover";VehicleModType2[VehicleModType2["Aerials"]=43]="Aerials";VehicleModType2[VehicleModType2["Trim"]=44]="Trim";VehicleModType2[VehicleModType2["Tank"]=45]="Tank";VehicleModType2[VehicleModType2["Windows"]=46]="Windows";VehicleModType2[VehicleModType2["Livery"]=48]="Livery"})(VehicleModType||(VehicleModType={}));(function(VehicleToggleModType2){VehicleToggleModType2[VehicleToggleModType2["Turbo"]=18]="Turbo";VehicleToggleModType2[VehicleToggleModType2["TireSmoke"]=20]="TireSmoke";VehicleToggleModType2[VehicleToggleModType2["XenonHeadlights"]=22]="XenonHeadlights"})(VehicleToggleModType||(VehicleToggleModType={}));(function(VehiclePaintType2){VehiclePaintType2[VehiclePaintType2["Normal"]=0]="Normal";VehiclePaintType2[VehiclePaintType2["Metallic"]=1]="Metallic";VehiclePaintType2[VehiclePaintType2["Pearl"]=2]="Pearl";VehiclePaintType2[VehiclePaintType2["Matte"]=3]="Matte";VehiclePaintType2[VehiclePaintType2["Metal"]=4]="Metal";VehiclePaintType2[VehiclePaintType2["Chrome"]=5]="Chrome"})(VehiclePaintType||(VehiclePaintType={}));(function(VehicleDoorIndex2){VehicleDoorIndex2[VehicleDoorIndex2["FrontRightDoor"]=1]="FrontRightDoor";VehicleDoorIndex2[VehicleDoorIndex2["FrontLeftDoor"]=0]="FrontLeftDoor";VehicleDoorIndex2[VehicleDoorIndex2["BackRightDoor"]=3]="BackRightDoor";VehicleDoorIndex2[VehicleDoorIndex2["BackLeftDoor"]=2]="BackLeftDoor";VehicleDoorIndex2[VehicleDoorIndex2["Hood"]=4]="Hood";VehicleDoorIndex2[VehicleDoorIndex2["Trunk"]=5]="Trunk"})(VehicleDoorIndex||(VehicleDoorIndex={}));(function(VehicleWheelType2){VehicleWheelType2[VehicleWheelType2["Sport"]=0]="Sport";VehicleWheelType2[VehicleWheelType2["Muscle"]=1]="Muscle";VehicleWheelType2[VehicleWheelType2["Lowrider"]=2]="Lowrider";VehicleWheelType2[VehicleWheelType2["SUV"]=3]="SUV";VehicleWheelType2[VehicleWheelType2["Offroad"]=4]="Offroad";VehicleWheelType2[VehicleWheelType2["Tuner"]=5]="Tuner";VehicleWheelType2[VehicleWheelType2["BikeWheels"]=6]="BikeWheels";VehicleWheelType2[VehicleWheelType2["HighEnd"]=7]="HighEnd";VehicleWheelType2[VehicleWheelType2["BennysOriginals"]=8]="BennysOriginals";VehicleWheelType2[VehicleWheelType2["BennysBespoke"]=9]="BennysBespoke"})(VehicleWheelType||(VehicleWheelType={}));(function(VehicleWheelIndex2){VehicleWheelIndex2[VehicleWheelIndex2["FrontLeftWheel"]=0]="FrontLeftWheel";VehicleWheelIndex2[VehicleWheelIndex2["FrontRightWheel"]=1]="FrontRightWheel";VehicleWheelIndex2[VehicleWheelIndex2["MidLeftWheel"]=2]="MidLeftWheel";VehicleWheelIndex2[VehicleWheelIndex2["MidRightWheel"]=3]="MidRightWheel";VehicleWheelIndex2[VehicleWheelIndex2["RearLeftWheel"]=4]="RearLeftWheel";VehicleWheelIndex2[VehicleWheelIndex2["RearRightWheel"]=5]="RearRightWheel";VehicleWheelIndex2[VehicleWheelIndex2["TrailerMidLeftWheel"]=45]="TrailerMidLeftWheel";VehicleWheelIndex2[VehicleWheelIndex2["TrailerMidRightWheel"]=47]="TrailerMidRightWheel"})(VehicleWheelIndex||(VehicleWheelIndex={}))}});var init_enums=__esm({"node_modules/@nativewrappers/client/lib/enums/index.js"(){init_Vehicle()}});var init_hashes=__esm({"node_modules/@nativewrappers/client/lib/hashes/index.js"(){}});var init_models=__esm({"node_modules/@nativewrappers/client/lib/models/index.js"(){}});var init_interfaces=__esm({"node_modules/@nativewrappers/client/lib/ui/interfaces/index.js"(){}});var init_panels=__esm({"node_modules/@nativewrappers/client/lib/ui/menu/items/panels/index.js"(){}});var init_items=__esm({"node_modules/@nativewrappers/client/lib/ui/menu/items/index.js"(){init_panels()}});var init_modules=__esm({"node_modules/@nativewrappers/client/lib/ui/menu/modules/index.js"(){}});var init_menu=__esm({"node_modules/@nativewrappers/client/lib/ui/menu/index.js"(){init_items();init_modules()}});var init_ui=__esm({"node_modules/@nativewrappers/client/lib/ui/index.js"(){init_interfaces();init_menu()}});var init_weapon=__esm({"node_modules/@nativewrappers/client/lib/weapon/index.js"(){}});var init_weaponComponent=__esm({"node_modules/@nativewrappers/client/lib/weaponComponent/index.js"(){}});var init_lib=__esm({"node_modules/@nativewrappers/client/lib/index.js"(){init_utils();init_models();init_enums();init_hashes();init_ui();init_weapon();init_weaponComponent()}});var handleMoney,defaultCoords,defaultPed,coordsSaveTimeout;var init_character=__esm({"src/config/character.json"(){handleMoney=true;defaultCoords={x:157.23,y:-993.29,z:28.57,w:163.57};defaultPed="a_m_y_hipster_01";coordsSaveTimeout=12e4}});var defaultGroup,groups;var init_player=__esm({"src/config/player.json"(){defaultGroup="user";groups={user:{allPermissions:false},admin:{allPermissions:true}}}});var Player;var init_player2=__esm({"src/server/player.ts"(){init_player();init_character2();init_functions();Player=class{constructor(source,license,newPlayer,data){this._characters=new Map;this._settings=new Map;this.save=(playerLeft,newPlayer)=>{const previousVal=this.toClientObject();const curDate=new Date;const curTime=curDate.getTime();this._playTime=this._playTime+(curTime-this._sessionStartTime);this._sessionStartTime=curTime;setImmediate(async()=>{const affectedRows=global.exports.oxmysql.update_async("UPDATE players SET name = ?, groups = ?, lastLogin = ?, playTime = ?  WHERE license = ? ",[this._name,this._groups,curTime,this._playTime,this._license]);if(!playerLeft)UpdatePlayerDataClient(this._source,"save","all",this.toClientObject(),previousVal);if(affectedRows)console.log(`Player: ${this._name} was saved!`)});if(this._currentChar)this._currentChar.save(playerLeft,newPlayer);this._settings.forEach(setting=>{setting?.save()})};this.toClientObject=()=>{const obj={source:this._source,license:this._license,name:this._name,groups:this._groups,firstLogin:this._firstLogin,lastLogin:this._lastLogin,playTime:this._playTime,character:this._currentChar?this._currentChar.toClientObject():void 0,sessionStartTime:this._sessionStartTime,settings:this._settings};return obj};this.toDBObject=()=>{const obj={license:this._license,name:this._name,groups:this._groups,firstLogin:this._firstLogin,lastLogin:this._lastLogin,playTime:this._playTime};return obj};this.getSource=()=>this._source;this.getLicense=()=>this._license;this.getName=()=>this._name;this.setName=(theName,updateClientData)=>{const previousVal=this._name;this._name=theName;if(updateClientData)UpdatePlayerDataClient(this._source,"update","name",theName,previousVal)};this.getGroups=()=>this._groups;this.setGroups=(groups2,updateClientData)=>{const groupObj=groups;const previousVal=this._groups;if(typeof groups2==="string"){if(groupObj[groups2]){this._groups=groups2;ExecuteCommand(`add_principal player.${this._source} nw.${groups2}`)}else return console.error(`Group ${groups2} does not exist!`)}else{const tempGroups=[];groups2.forEach(group=>{if(groupObj[group]){tempGroups.push(group);ExecuteCommand(`add_principal player.${this._source} nw.${group}`)}else console.error(`Group ${group} does not exist!`)});if(tempGroups.length===0)return;this._groups=tempGroups}if(updateClientData)UpdatePlayerDataClient(this._source,"update","groups",this._groups,previousVal)};this.addGroups=(groups2,updateClientData)=>{const groupObj=groups;const previousVal=this._groups;if(typeof groups2==="string"){if(!groupObj[groups2])return console.error(`Group ${groups2} does not exist!`);if(typeof this._groups==="string"){const currentGroup=this._groups;this._groups=[currentGroup,groups2];ExecuteCommand(`add_principal player.${this._source} nw.${groups2}`)}else{this._groups.push(groups2);ExecuteCommand(`add_principal player.${this._source} nw.${groups2}`)}}else{groups2.forEach(group=>{if(groupObj[group]){if(typeof this._groups==="string"){const currentGroup=this._groups;this._groups=[currentGroup,group];ExecuteCommand(`add_principal player.${this._source} nw.${group}`)}else{this._groups.push(group);ExecuteCommand(`add_principal player.${this._source} nw.${group}`)}}else console.error(`Group ${group} does not exist!`)})}if(updateClientData)UpdatePlayerDataClient(this._source,"update","groups",this._groups,previousVal)};this.removeGroups=(groups2,updateClientData)=>{const groupObj=groups;const previousVal=this._groups;if(typeof groups2==="string"){if(!groupObj[groups2])return console.error(`Group ${groups2} does not exist!`);if(typeof this._groups==="string")this._groups=defaultGroup;else this._groups.filter(group=>{if(group!==groups2)return group;ExecuteCommand(`remove_principal player.${this._source} nw.${groups2}`)})}else{if(typeof this._groups==="string"){ExecuteCommand(`remove_principal player.${this._source} nw.${this._groups}`);this._groups=defaultGroup}else{groups2.forEach(group=>{if(!groupObj[group])console.error(`Group ${group} does not exist!`);if(Array.isArray(this._groups))this._groups.filter(_group=>{if(_group!==group)return _group;ExecuteCommand(`remove_principal player.${this._source} nw.${group}`)})})}}if(updateClientData)UpdatePlayerDataClient(this._source,"update","groups",this._groups,previousVal)};this.getFirstLogin=()=>this._firstLogin;this.setFirstLogin=(login,updateClientData)=>{const previousVal=this._firstLogin;this._firstLogin=login;if(updateClientData)UpdatePlayerDataClient(this._source,"update","firstLogin",login,previousVal)};this.getLastLogin=()=>this._lastLogin;this.setLastLogin=(login,updateClientData)=>{const previousVal=this._lastLogin;this._lastLogin=login;if(updateClientData)UpdatePlayerDataClient(this._source,"update","lastLogin",login,previousVal)};this.getPlayTime=()=>this._playTime;this.setPlayTime=(time,updateClientData)=>{const previousVal=this._playTime;this._playTime=time;if(updateClientData)UpdatePlayerDataClient(this._source,"update","playTime",time,previousVal)};this.setCharacters=(characters,updateClientData)=>{if(!characters)return;const previousVal=this._characters;characters.map(character=>this._characters.set(character.getCitizenId(),character));if(updateClientData)UpdatePlayerDataClient(this._source,"update","characters",this._characters,previousVal)};this.setCharacter=(character,updateClientData)=>{const previousVal=this._characters.get(character.getCitizenId());this._characters.set(character.getCitizenId(),character);if(updateClientData)UpdatePlayerDataClient(this._source,"update","character",character,previousVal)};this.getCharacter=citizenId=>this._characters.get(citizenId);this.switchCharacter=(citizenId,updateClientData)=>{const previousVal=this._currentChar.toClientObject();this._currentChar.save();const newChar=this.getCharacter(citizenId);if(!newChar)return;this.setCurrentCharacter(newChar);if(updateClientData){UpdatePlayerDataClient(this._source,"switch","character",newChar.toClientObject(),previousVal);UpdateCharacterDataClient(this._source,this._currentChar.getCitizenId(),"switch","character",newChar.toClientObject(),previousVal)}};this._extraTables={};this.deleteCharacter=citizenId=>{console.log(`Delete character ${citizenId} from player ${this._name}`);this._characters.delete(citizenId);global.exports.oxmysql.query("DELETE FROM characters WHERE citizenId = ?",[citizenId],()=>{console.log(`Player: ${this._name} deleted a character!`)});if(Object.keys(this._extraTables).length>0){for(const table in this._extraTables){global.exports.oxmysql.query(`DELETE FROM ${table} WHERE ${this._extraTables[table]} = ?`,[citizenId])}}};this.getCurrentCharacter=()=>this._currentChar;this.setCurrentCharacter=(char,updateClientData)=>{if(char instanceof Character){const previousVal2=this._currentChar?.toClientObject();this._currentChar=char;if(updateClientData){UpdatePlayerDataClient(this._source,"switch","character",char.toClientObject(),previousVal2);UpdateCharacterDataClient(this._source,this._currentChar.getCitizenId(),"switch","character",char.toClientObject(),previousVal2)}return}const newChar=this._characters.get(char);if(!newChar)return;const previousVal=this._currentChar?.toClientObject();this._currentChar=newChar;if(updateClientData){UpdatePlayerDataClient(this._source,"switch","character",newChar.toClientObject(),previousVal);UpdateCharacterDataClient(this._source,this._currentChar.getCitizenId(),"switch","character",newChar.toClientObject(),previousVal)}};this.getSessionStartTime=()=>this._sessionStartTime;this.setSessionStartTime=(time,updateClientData)=>{const previousVal=this._sessionStartTime;this._sessionStartTime=time;if(updateClientData)UpdatePlayerDataClient(this._source,"update","sessionStartTime",time,previousVal)};this.getSetting=key=>this._settings.get(key);this.setSetting=(key,value,updateClientData)=>{const previousVal=this._settings.get(key);this._settings.set(key,value);if(updateClientData)UpdatePlayerDataClient(this._source,"update",`setting_${key}`,value,previousVal)};this.removeSetting=(key,updateClientData)=>{const previousVal=this._settings.get(key);this._settings.delete(key);if(updateClientData)UpdatePlayerDataClient(this._source,"update",`setting_${key}`,null,previousVal)};this._source=source;this._license=license;const curTime=new Date().getTime();this._sessionStartTime=curTime;this.setName(GetPlayerName(source));if(!newPlayer&&data){this.setGroups(data.groups);this.setFirstLogin(data.firstLogin);this.setLastLogin(curTime);this.setPlayTime(data.playTime)}else{this.setGroups(defaultGroup);this.setFirstLogin(curTime);this.setLastLogin(curTime);this.setPlayTime(0)}}}}});var OnFirstJoin,GetPlayerFromSource,GetPlayerFromLicense,SavePlayers,SavePlayer,SaveCoords,UpdatePlayerDataClient,UpdateCharacterDataClient;var init_functions=__esm({"src/server/functions.ts"(){init_player2();init_server();OnFirstJoin=(source,license)=>{const player=new Player(source,license,true);server_default.Players.set(source,player);let groups2=player.getGroups();if(Array.isArray(groups2)){groups2=JSON.stringify(groups2)}global.exports.oxmysql.insert(`INSERT INTO players (license, name, groups, firstLogin, lastLogin, playTime) VALUES (?, ?, ?, ?, ?, ?)`,[player.getLicense(),player.getName(),groups2,player.getFirstLogin(),player.getLastLogin(),player.getPlayTime()],()=>{UpdatePlayerDataClient(source,"new","all",player.toClientObject());sendCharacters(source,license)});setImmediate(()=>{})};global.exports("OnFirstJoin",OnFirstJoin);GetPlayerFromSource=source=>{return server_default.Players.get(source)};global.exports("GetPlayerFromSource",GetPlayerFromSource);GetPlayerFromLicense=license=>{server_default.Players.forEach(player=>{if(player.getLicense()===license)return player});return};global.exports("GetPlayerFromLicense",GetPlayerFromLicense);SavePlayers=playersLeft=>{console.info("Saving all players...");server_default.Players.forEach(player=>SavePlayer(player,playersLeft))};global.exports("SavePlayers",SavePlayers);SavePlayer=(player,playerLeft)=>{let player2;if(player instanceof Player)player2=player;else player2=GetPlayerFromSource(player);if(!player2||!(player2 instanceof Player))return;player2.save(playerLeft);if(playerLeft){const playerSrc=player2.getSource();const playerClObj=player2.toClientObject();emitNet("NW:PlayerLogout",playerSrc,playerClObj);emit("NW:PlayerLogout",playerSrc,playerClObj);server_default.Players.delete(playerSrc)}};global.exports("SavePlayer",SavePlayer);SaveCoords=(player,coords)=>{let player2;if(player instanceof Player)player2=player;else player2=GetPlayerFromSource(player);if(!player2||!(player2 instanceof Player))return;const character=player2.getCurrentCharacter();if(!character)return;character.setCoords(coords,true)};global.exports("SaveCoords",SaveCoords);UpdatePlayerDataClient=(source,type,changed,changedVal,previousVal)=>{let data;const player=GetPlayerFromSource(source);if(!player)return;data=player.toClientObject();if(!data)return;emitNet("NW:SetPlayerData",source,data,changed,changedVal,previousVal);emit("NW:PlayerDataUpdated",source,data,changed,changedVal,previousVal)};UpdateCharacterDataClient=(source,citizenId,type,changed,changedVal,previousVal)=>{let data;const player=GetPlayerFromSource(source);if(!player)return;const character=player.getCurrentCharacter();if(character.getCitizenId()===citizenId)data=character.toClientObject();if(!data)return;emitNet("NW:SetCharacterData",source,data,type,changed,changedVal,previousVal);emit("NW:CharacterDataUpdated",source,data,type,changed,changedVal,previousVal)}}});var getLicense,generateUUIDv4;var init_utils2=__esm({"src/server/utils.ts"(){init_lib();getLicense=player=>{const playerSrc=player.toString();const identifiers=getPlayerIdentifiers(playerSrc);for(const identifier of identifiers){if(identifier.includes("license:"))return identifier}};global.exports("GetLicense",getLicense);generateUUIDv4=()=>Crypto.uuidv4();global.exports("generateUUIDv4",generateUUIDv4)}});var _Character,Character;var init_character2=__esm({"src/server/character.ts"(){init_lib();init_character();init_functions();init_utils2();_Character=class _Character{constructor(source,license,newChar,data){this._loggedIn=false;this._firstName="";this._lastName="";this._coords=_Character.defaultCoords;this._citizenId="";this._DOB=0;this._height=0;this._sex="";this._nationality="";this._backstory="";this._bank=0;this._customObjects=new Map;this.save=(playerLeft,newPlayer)=>{if(!newPlayer){const ped=GetPlayerPed(this._source);const coords=GetEntityCoords(ped,false);const heading=GetEntityHeading(ped);SaveCoords(this._source,new Vector4(coords[0],coords[1],coords[2],heading))}setImmediate(async()=>{const affectedRows=await global.exports.oxmysql.update_async("UPDATE characters SET firstName = ?, lastName = ?, dob = ?, height = ?, sex = ?, bank = ?, nationality = ?, backstory = ?, coords = ? WHERE citizenId = ?",[this._firstName,this._lastName,this._DOB,this._height,this._sex,this._bank,this._nationality,this._backstory,JSON.stringify(this._coords),this._citizenId]);if(!playerLeft)UpdateCharacterDataClient(this._source,this._citizenId,"save","all",this.toClientObject());if(affectedRows)console.log(`[id: ${this._source}] Character: ${this._firstName} ${this._lastName} was saved!`)});this._customObjects.forEach(obj=>{obj?.save()})};this.toClientObject=()=>{const obj={source:this._source,license:this._license,loggedIn:this._loggedIn,citizenId:this._citizenId,firstName:this._firstName,lastName:this._lastName,dob:this._DOB,height:this._height,sex:this._sex,nationality:this._nationality,backstory:this._backstory,coords:this._coords,customObjects:this._customObjects};return obj};this.toDBObject=()=>{const obj={source:this._source,license:this._license,firstName:this._firstName,lastName:this._lastName,coords:JSON.stringify(this._coords),citizenId:this._citizenId,dob:this._DOB,height:this._height,sex:this._sex,nationality:this._nationality,backstory:this._backstory,bank:this._bank};return obj};this.getSource=()=>this._source;this.getLicense=()=>this._license;this.getLoggedIn=()=>this._loggedIn;this.setLoggedIn=(value,updateClientData)=>{const previousVal=this._loggedIn;this._loggedIn=value;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","loggedIn",value,previousVal)};this.setCitizenId=(id,updateClientData)=>{const previousVal=this._citizenId;this._citizenId=id;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","citizenId",id,previousVal)};this.getCitizenId=()=>this._citizenId;this.setFirstName=(name,updateClientData)=>{const previousVal=this._citizenId;this._firstName=name;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","firstName",name,previousVal)};this.getFirstName=()=>this._firstName;this.setLastName=(name,updateClientData)=>{const previousVal=this._lastName;this._lastName=name;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","lastName",name,previousVal)};this.getLastName=()=>this._lastName;this.getFullName=()=>{return this._firstName+" "+this._lastName};this.setDOB=(dob,updateClientData)=>{const previousVal=this._DOB;this._DOB=dob;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","DOB",dob,previousVal)};this.getDOB=()=>this._DOB;this.getHeight=()=>this._height;this.setHeight=(value,updateClientData)=>{const previousVal=this._height;this._height=value;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","height",value,previousVal)};this.getSex=()=>this._sex;this.setSex=(value,updateClientData)=>{const previousVal=this._sex;this._sex=value;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","sex",value,previousVal)};this.getNationality=()=>this._nationality;this.setNationality=(value,updateClientData)=>{const previousVal=this._nationality;this._nationality=value;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","nationality",value,previousVal)};this.getBackstory=()=>this._backstory;this.setBackstory=(value,updateClientData)=>{const previousVal=this._backstory;this._backstory=value;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","backstory",value,previousVal)};this.getCoords=()=>this._coords;this.setCoords=(value,updateClientData)=>{const previousVal=this._coords;this._coords=value;if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","coords",value,previousVal)};this.setObject=(key,value,updateClientData)=>{const previousVal=this._customObjects.get(key);this._customObjects.set(key,value);if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update",`customObjects_${key}`,value,previousVal)};this.removeObject=(key,updateClientData)=>{const previousVal=this._customObjects.get(key);this._customObjects.delete(key);if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update",`customObjects_${key}`,null,previousVal)};this.getObject=key=>this._customObjects.get(key);this.setBank=(money,updateClientData)=>{let previousVal;if(handleMoney){previousVal=this._bank;this._bank=money}if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","bank",money,previousVal)};this.addBank=(money,updateClientData)=>{let previousVal;if(handleMoney){previousVal=this._bank;this._bank+=money}if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","bank",this._bank,previousVal)};this.removeBank=(money,updateClientData)=>{let previousVal;if(handleMoney){previousVal=this._bank;this._bank-=money}if(updateClientData)UpdateCharacterDataClient(this._source,this._citizenId,"update","bank",this._bank,previousVal)};this.getBank=()=>{if(handleMoney){return this._bank}return 0};this._source=source;this._license=license;this.setFirstName(data.firstName);this.setLastName(data.lastName);const coords=data.coords?JSON.parse(data.coords):null;this.setCoords(newChar?_Character.defaultCoords:new Vector4(coords?.x||_Character.defaultCoords.x,coords?.y||_Character.defaultCoords.y,coords?.z||_Character.defaultCoords.z,coords?.w||_Character.defaultCoords.w));if(newChar){this.setCitizenId(generateUUIDv4());if(data.dob)this.setDOB(new Date(data.dob).getTime());if(data.height)this.setHeight(data.height);if(data.sex)this.setSex(data.sex);if(data.nationality)this.setNationality(data.nationality);if(data.backstory)this.setBackstory(data.backstory);setImmediate(async()=>{global.exports.oxmysql.insert("INSERT INTO characters (citizenId, license, firstName, lastName, dob, height, sex, bank, nationality, backstory, coords) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",[this.getCitizenId(),license,data.firstName,data.lastName,this.getDOB(),this.getHeight(),this.getSex(),this.getBank(),this.getNationality(),this.getBackstory(),JSON.stringify(_Character.defaultCoords)])})}else{if(data.citizenId)this.setCitizenId(data.citizenId);if(data.dob)this.setDOB(data.dob);if(data.height)this.setHeight(data.height);if(data.sex)this.setSex(data.sex);if(data.nationality)this.setNationality(data.nationality);if(data.backstory)this.setBackstory(data.backstory);if(data.bank)this.setBank(data.bank)}this.setLoggedIn(true)}};_Character.defaultCoords=new Vector4(defaultCoords.x,defaultCoords.y,defaultCoords.z,defaultCoords.w);Character=_Character}});var init_connecting=__esm({"src/server/connecting.ts"(){init_utils2();on("playerConnecting",(name,_setKickReason,deferrals)=>{deferrals.defer();const player=global.source.toString();deferrals.update(`Hello ${name}. Your license is being checked.`);const license=getLicense(Number(player));if(!license)deferrals.done("You don't have a valid license.");else deferrals.done()})}});var init_listeners=__esm({"src/server/listeners.ts"(){init_character2();init_server();init_functions();onNet("NW:SetCurrentChar",(id,updateClientData)=>{const source=global.source;const player=server_default.Players.get(source);if(!player){console.error("No player was found");return}const character=player.getCharacter(id);if(!character)return;player.setCurrentCharacter(character,updateClientData);const clientObject=player.toClientObject();emit("NW:CharacterChosen",source,character.getCitizenId());emitNet("NW:PlayerLoaded",source,clientObject);emitNet("NW:Spawn",source,character.getCoords())});onNet("NW:CreateNewCharacter",data=>{const source=global.source;const player=GetPlayerFromSource(source);if(!player)return;const character=new Character(source,player.getLicense(),true,data);player.setCharacter(character);player.setCurrentCharacter(character);player.save(false,true);const clientObject=player.toClientObject();emit("NW:CharacterChosen",source,false);UpdatePlayerDataClient(source,"update","character",character.toClientObject());UpdateCharacterDataClient(source,character.getCitizenId(),"new","all",character.toClientObject());emitNet("NW:PlayerLoaded",source,clientObject);emitNet("NW:Spawn",source,character.getCoords())});onNet("NW:DeleteCharacter",data=>{const player=GetPlayerFromSource(global.source);if(!player)return;player.deleteCharacter(data)});on("playerDropped",()=>{const player=GetPlayerFromSource(global.source);if(!player)return;const groups2=player.getGroups();if(Array.isArray(groups2)){groups2.forEach(group=>{ExecuteCommand(`remove_principal player.${player.getSource()} nw.${group}`)})}else{ExecuteCommand(`remove_principal player.${player.getSource()} nw.${groups2}`)}SavePlayer(player,true)});onNet("NW:SaveAll",()=>{SavePlayers()});on("onResourceStop",resource=>{SavePlayers(true)});on("onServerResourceStart",resource=>{})}});var NW,loadCharacters,sendCharacters,firstJoin,server_default;var init_server=__esm({"src/server/server.ts"(){init_lib();init_character();init_character2();init_connecting();init_functions();init_functions();init_listeners();init_player2();init_utils2();NW={Players:new Map};onNet("NW:LogoutPlayer",()=>{const player=GetPlayerFromSource(global.source);if(!player)return;player.getCurrentCharacter().setLoggedIn(false);SavePlayer(player);emitNet("NW:PlayerLogout",global.source,player.toClientObject());emit("NW:PlayerLogout",global.source,player.toClientObject);loadCharacters(global.source,player.getLicense())});onNet("NW:PlayerJoined",()=>{const src=global.source;const license=getLicense(src);if(!license)return;global.exports.oxmysql.single("SELECT * FROM players WHERE license = ?",[license],result=>{if(!result){firstJoin(src,license);return}const player=new Player(src,license,false,result);NW.Players.set(src,player);loadCharacters(src,license)})});loadCharacters=(source,license)=>{global.exports.oxmysql.query("SELECT * FROM characters WHERE license = ?",[license],result=>{sendCharacters(source,license,result)})};sendCharacters=(source,license,result)=>{const player=NW.Players.get(source);const chars=[];if(!player)return;const newChars=[];if(result){result.forEach(v=>{const char=new Character(source,license,false,v);newChars.push(char.toClientObject());chars.push(char)});player.setCharacters(chars)}emitNet("NW:ShowCharacterSelection",source,newChars)};firstJoin=(source,license)=>{OnFirstJoin(source,license)};setInterval(()=>{SavePlayers()},3e5);setInterval(()=>{NW.Players.forEach((player,source)=>{const ped=GetPlayerPed(source);const coords=GetEntityCoords(ped,false);const heading=GetEntityHeading(ped);SaveCoords(player,new Vector4(coords[0],coords[1],coords[2],heading))})},coordsSaveTimeout);server_default=NW}});var server_exports={};__export(server_exports,{initialize:()=>initialize});function initialize(container2,pluginManager2){console.log("Server initialisiert")}var init_server2=__esm({"src/server/index.ts"(){init_server()}});var Teleport,GetPlayerData,GetCharacterData;var init_functions2=__esm({"src/client/functions.ts"(){init_client();Teleport=(coords,heading)=>{const ped=PlayerPedId();SetEntityCoords(ped,coords.x,coords.y,coords.z,true,false,false,false);SetEntityHeading(ped,heading??90)};global.exports("Teleport",Teleport);GetPlayerData=()=>client_default.PlayerData;global.exports("GetPlayerData",GetPlayerData);GetCharacterData=()=>client_default.CharacterData;global.exports("GetCharacterData",GetCharacterData)}});var joaat,Delay;var init_utils3=__esm({"src/shared/utils.ts"(){joaat=key=>{const keyLowered=key.toLowerCase();const length=keyLowered.length;let hash,i;for(hash=i=0;i<length;i++){hash+=keyLowered.charCodeAt(i);hash+=hash<<10;hash^=hash>>>6}hash+=hash<<3;hash^=hash>>>11;hash+=hash<<15;return Math.floor(hash<<0)};Delay=ms=>new Promise(res=>setTimeout(res,ms))}});var disableWantedLevel,enablePvP,calmAI,disableDistantSirens;var init_world=__esm({"src/config/world.json"(){disableWantedLevel=true;enablePvP=true;calmAI=true;disableDistantSirens=true}});var init_world2=__esm({"src/client/world.ts"(){init_utils3();init_world();setImmediate(()=>{const playerPed=PlayerPedId();if(disableWantedLevel){ClearPlayerWantedLevel(playerPed);SetMaxWantedLevel(0)}if(enablePvP){SetCanAttackFriendly(playerPed,true,false);NetworkSetFriendlyFireOption(true)}if(calmAI){SetRelationshipBetweenGroups(1,joaat("AMBIENT_GANG_HILLBILLY"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("AMBIENT_GANG_BALLAS"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("AMBIENT_GANG_MEXICAN"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("AMBIENT_GANG_FAMILY"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("AMBIENT_GANG_MARABUNTE"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("AMBIENT_GANG_SALVA"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("GANG_1"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("GANG_2"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("GANG_9"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("GANG_10"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("FIREMAN"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("MEDIC"),joaat("PLAYER"));SetRelationshipBetweenGroups(1,joaat("COP"),joaat("PLAYER"))}if(disableDistantSirens)DistantCopCarSirens(!disableDistantSirens)})}});var init_commands=__esm({"src/client/commands.ts"(){init_client();RegisterCommand("logout",async()=>{if(!client_default.CharacterData.loggedIn)return;setImmediate(()=>{emitNet("NW:LogoutPlayer")})},false)}});var NUIOff;var init_utils4=__esm({"src/client/utils.ts"(){NUIOff=()=>{SetNuiFocus(false,false);SendNUIMessage({action:"setVisible",data:{visible:false}})}}});var init_nui=__esm({"src/client/nui.ts"(){init_utils4();RegisterNuiCallbackType("setCharacter");on("__cfx_nui:setCharacter",async(data,cb)=>{NUIOff();DoScreenFadeIn(200);emitNet("NW:SetCurrentChar",data);cb({})});RegisterNuiCallbackType("createCharacter");on("__cfx_nui:createCharacter",async(data,cb)=>{NUIOff();DoScreenFadeIn(200);emitNet("NW:CreateNewCharacter",data);cb({})});RegisterNuiCallbackType("deleteCharacter");on("__cfx_nui:deleteCharacter",async(data,cb)=>{emitNet("NW:DeleteCharacter",data);cb({})})}});var init_listeners2=__esm({"src/client/listeners.ts"(){init_client();onNet("NW:Spawn",coords=>{setSpawnCoords(coords);setForceRespawn(true)});onNet("NW:ShowCharacterSelection",characters=>{setTimeout(()=>{SetNuiFocus(true,true);SendNUIMessage({action:"setVisible",data:{visible:true,route:"/characters/list",data:{characters}}})},1e3)});onNet("NW:SetPlayerData",(playerData,type,changed,changedVal,previousVal)=>{const invokingResource=GetInvokingResource();if(invokingResource&&invokingResource!==GetCurrentResourceName())return;client_default.PlayerData=playerData;emit("NW:PlayerDataUpdated",playerData,type,changed,changedVal,previousVal)});onNet("NW:SetCharacterData",(characterData,type,changed,changedVal,previousVal)=>{const invokingResource=GetInvokingResource();if(invokingResource&&invokingResource!==GetCurrentResourceName())return;client_default.CharacterData=characterData;emit("NW:CharacterDataUpdated",characterData,type,changed,changedVal,previousVal)})}});var NW2,joined,spawning,diedAt,forceRespawn,defaultPedHash,spawnCoords,playerId,setSpawnCoords,setForceRespawn,client_default;var init_client=__esm({"src/client/client.ts"(){init_character();init_functions2();init_world2();init_commands();init_nui();init_listeners2();init_lib();init_utils3();NW2={PlayerData:{source:-1,license:"placeholderLicense",name:"placeholderName",groups:"placeholderGroup",firstLogin:-1,lastLogin:-1,playTime:-1,sessionStartTime:-1},CharacterData:{source:-1,license:"placeholderLicense",loggedIn:false,firstName:"placeholderFirstName",lastName:"placeholderLastName",coords:new Vector4(defaultCoords.x,defaultCoords.y,defaultCoords.z,defaultCoords.w)}};joined=false;spawning=false;diedAt=-1;forceRespawn=false;defaultPedHash=joaat(defaultPed);spawnCoords=new Vector4(defaultCoords.x,defaultCoords.y,defaultCoords.z,defaultCoords.w);playerId=PlayerId();setSpawnCoords=coords=>{spawnCoords=coords};setForceRespawn=respawn=>{forceRespawn=respawn};setInterval(async()=>{let playerPed=PlayerPedId();if(!joined&&NetworkIsPlayerActive(playerId)){joined=true;DoScreenFadeOut(0);emitNet("NW:PlayerJoined")}else if(joined){if(diedAt!==-1&&Math.abs(GetGameTimer()-diedAt)>2e3&&!spawning||forceRespawn){forceRespawn=false;spawning=true;DoScreenFadeOut(500);while(!IsScreenFadedOut()){await Delay(0)}SetPlayerControl(playerId,false,0);if(IsEntityVisible(playerPed)){SetEntityVisible(playerPed,false,false)}SetEntityCollision(playerPed,false,false);FreezeEntityPosition(playerPed,true);SetPlayerInvincible(playerId,true);if(!IsPedFatallyInjured(playerPed)){ClearPedTasksImmediately(playerPed)}RequestModel(defaultPedHash);while(!HasModelLoaded(defaultPedHash)){await Delay(0)}SetPlayerModel(playerId,defaultPedHash);SetModelAsNoLongerNeeded(defaultPedHash);RequestCollisionAtCoord(spawnCoords.x,spawnCoords.y,spawnCoords.z);playerPed=PlayerPedId();SetEntityCoords(playerPed,spawnCoords.x,spawnCoords.y,spawnCoords.z,false,false,false,true);NetworkResurrectLocalPlayer(spawnCoords.x,spawnCoords.y,spawnCoords.z,spawnCoords.w,true,true);ClearPedTasksImmediately(playerPed);RemoveAllPedWeapons(playerPed,true);ClearPlayerWantedLevel(playerId);const time=GetGameTimer();while(!HasCollisionLoadedAroundEntity(playerPed)&&GetGameTimer()-time<5e3){await Delay(0)}ShutdownLoadingScreen();ShutdownLoadingScreenNui();if(IsScreenFadedOut()){DoScreenFadeIn(500);while(!IsScreenFadedIn()){await Delay(0)}}SetPlayerControl(playerId,true,0);if(!IsEntityVisible(playerPed)){SetEntityVisible(playerPed,true,false)}if(!IsPedInAnyVehicle(playerPed,false)){SetEntityCollision(playerPed,true,false)}FreezeEntityPosition(playerPed,false);SetPlayerInvincible(playerId,false);if(!IsPedFatallyInjured(playerPed)){ClearPedTasksImmediately(playerPed)}emit("playerSpawned");spawning=false}if(IsEntityDead(playerPed)){if(diedAt===-1){diedAt=GetGameTimer()}}else{diedAt=-1}}},500);client_default=NW2}});var client_exports={};__export(client_exports,{initialize:()=>initialize2});function initialize2(container2,pluginManager2){console.log("Client initialisiert")}var init_client2=__esm({"src/client/index.ts"(){init_client()}});function registerCommand(commandName,handlerFunction,config,restricted){RegisterCommand(commandName,(source,args,raw)=>{if(config?.adminLevel){console.log("has amdin level")}handlerFunction(source,args,raw)},restricted)}var DependencyContainer=class{constructor(){this.dependencies={}}register(name,instance){this.dependencies[name]=instance}resolve(name){return this.dependencies[name]}};var PluginManager=class{constructor(container2){this.container=container2;this.plugins=[]}loadPlugin(plugin){this.plugins.push(plugin);this.container.register(plugin.name,plugin);plugin.load()}};var container=new DependencyContainer;var pluginManager=new PluginManager(container);function initialize3(isServer){if(isServer){(init_server2(),__toCommonJS(server_exports)).initialize(container,pluginManager)}else{(init_client2(),__toCommonJS(client_exports)).initialize(container,pluginManager)}return pluginManager}export{initialize3 as initialize,registerCommand};
