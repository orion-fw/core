var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __esm=(fn,res)=>function __init(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var server_exports={};__export(server_exports,{initialize:()=>initialize});function initialize(container2,pluginManager2){console.log("Server initialisiert")}var init_server=__esm({"src/server/index.ts"(){}});var client_exports={};__export(client_exports,{default:()=>client_default});var CoreClientModule,client_default;var init_client=__esm({"src/client/index.ts"(){CoreClientModule=class{constructor(){console.log("Core Module (Client) Initialized")}};client_default=CoreClientModule}});function registerCommand(commandName,handlerFunction,config,restricted){setImmediate(()=>{emit("chat:addSuggestion",`/${commandName}`,config?.description,config.arguments)});RegisterCommand(commandName,(source,args,raw)=>{if(config.adminLevel){}console.log("trigger");handlerFunction(source,args,raw)},restricted)}var DependencyContainer=class{constructor(){this.dependencies={}}register(name,instance){this.dependencies[name]=instance}resolve(name){return this.dependencies[name]}};var PluginManager=class{constructor(container2){this.container=container2;this.plugins=[]}loadPlugin(plugin){this.plugins.push(plugin);this.container.register(plugin.name,plugin);plugin.load()}};var container=new DependencyContainer;var pluginManager=new PluginManager(container);function initialize2(isServer){if(isServer){(init_server(),__toCommonJS(server_exports)).initialize(container,pluginManager)}else{(init_client(),__toCommonJS(client_exports)).initialize(container,pluginManager)}}export{initialize2 as initialize,registerCommand};
